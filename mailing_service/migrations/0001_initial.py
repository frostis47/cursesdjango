# Generated by Django 5.2 on 2025-04-05 18:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_mailing', models.DateTimeField(verbose_name='Дата время начала рассылки')),
                ('end_mailing', models.DateTimeField(verbose_name='Дата время окончания рассылки')),
                ('status', models.CharField(default='Создана', verbose_name='Статус рассылки')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'рассылка',
                'verbose_name_plural': 'рассылки',
                'db_table': 'mailing',
                'permissions': [('can_disable_mailing', 'can disable mailing'), ('can_view_all_mailing_lists', 'can view all mailing lists')],
            },
        ),
        migrations.CreateModel(
            name='MailingAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_attempt', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(verbose_name='Статус рассылки')),
                ('mail_server_response', models.TextField(verbose_name='Ответ почтового сервера')),
                ('mailing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mailing', to='mailing_service.mailing')),
            ],
            options={
                'verbose_name': 'попытка рассылки',
                'verbose_name_plural': 'попытки рассылки',
                'db_table': 'mailing_attempt',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_message', models.CharField(verbose_name='Тема письма')),
                ('message', models.TextField(verbose_name='Содержание письма')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'письмо',
                'verbose_name_plural': 'письма',
                'db_table': 'message',
                'permissions': [('can_view_all_message_lists', 'can view all message lists')],
            },
        ),
        migrations.AddField(
            model_name='mailing',
            name='messages',
            field=models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='link_on_message', to='mailing_service.message', verbose_name='Письмо'),
        ),
        migrations.CreateModel(
            name='RecipientMailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('full_name', models.CharField(verbose_name='ФИО')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'получатель',
                'verbose_name_plural': 'получатели',
                'db_table': 'recipient_mailing',
                'permissions': [('can_view_all_recipient_lists', 'can view all recipient lists')],
            },
        ),
        migrations.AddField(
            model_name='mailing',
            name='recipients',
            field=models.ManyToManyField(related_name='recipients', to='mailing_service.recipientmailing', verbose_name='Получатели'),
        ),
    ]
